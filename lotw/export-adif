#!/usr/bin/python3

import os
import pyqso.adif
import psycopg2
import psycopg2.extras
import sys

adiffile = sys.argv[1]
since = sys.argv[2]

conn = psycopg2.connect("service=cb")
cur = conn.cursor(cursor_factory = psycopg2.extras.DictCursor)

cur.execute("""SELECT qrg::text AS "FREQ",
        qrg::band AS "BAND",
        mode AS "MODE",
        CASE qso_via
          WHEN 'QO100' THEN 'SAT'
          ELSE ''
        END AS "PROP_MODE",
        CASE qso_via
          WHEN 'QO100' THEN 'QO-100'
          ELSE ''
        END AS "SAT_NAME",
        to_char(start, 'YYYYMMDD') AS "QSO_DATE",
        to_char(start, 'hh24mi') AS "TIME_ON",
        coalesce(regexp_replace(rsttx, '^599(.)', '599 \\1'), '') AS "RST_SENT",
        coalesce(regexp_replace(rstrx, '^599(.)', '599 \\1'), '') AS "RST_RCVD",
        coalesce(qsltx, 'N') AS "QSL_SENT",
        coalesce(qslrx, 'N') AS "QSL_RCVD",
        call AS "CALL",
        coalesce(loc, '') AS "GRIDSQUARE",
        coalesce(mypwr::text, '') AS "TX_PWR"
        FROM log
        WHERE coalesce(last_update, start) >= %s
            AND mycall LIKE 'DF7CB%%'
        ORDER BY start, call""", [since])

records = cur.fetchall()
adif = pyqso.adif.ADIF()
adif.write(records, adiffile)

# Remove timestamp from header to make output reproducible
os.system("sed -i -e 's/ Generated on .*//' %s" % adiffile)
